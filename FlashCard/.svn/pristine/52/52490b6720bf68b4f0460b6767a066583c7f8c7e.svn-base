package edu.iup.flashcard.practice;

import edu.iup.flashcard.ContentDAO;
import android.app.ListActivity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.database.Cursor;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.widget.SimpleCursorAdapter;
import android.view.Menu;
import android.view.View;
import android.widget.ListAdapter;
import android.widget.ListView;

/**
 *
 * @author Derek
 *
 */
public class ChooseDeckActivity extends ListActivity {
    private Cursor mCursor;
    private ContentDAO dbHelper;
    public static final String SELECTED_DECK_KEY = "SELECTED_DECK";
    public static final String SHARED_PREFERENCES_KEY = "SP_KEY";


    /**
     * Default initialize method for Android SDK. Displays the opening
     * GUI for the application which is the Deck list. Creates the
     * DB connection in the background.
     *
     * @param savedInstanceState - The cached last saved state of the
     * application.
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {



    }

    @Override
    public void onListItemClick(ListView l, View v, int position, long id) {


    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {

        return false;
    }

    /**
     * Inner class to get a query of the DB in the background. AsyncTask allows the quick
     * threading of pre-loading the DB so that a thread must not be in place for the entirety
     * of the applications.
     *
     * @Generic Void - params, the type of the parameters sent to the task upon execution.
     * @Generic Void - progress, the type of progress units published during the background comp.
     * @Generic Cursor - result, the type of the result of the background computation.
     */
    class GetDeckTask extends AsyncTask<Void, Void, Cursor> {
        //this class is never used or referenced.  not sure what it was supposed to do.
        /**
         * Get the user pick of the lesson and close the DB open helper
         *
         * @param params - the params generic
         */
        @Override
        protected Cursor doInBackground(Void... params) {

            dbHelper.close();
            return mCursor;
        }

        /**
         *
         *
         * @param result - the result generic
         */
        @Override
        protected void onPostExecute(Cursor result) {
            if (result != null) {

            }
        }

    }
}

